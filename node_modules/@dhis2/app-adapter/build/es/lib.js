/* eslint-disable */
import _JSXStyle from 'styled-jsx/style';
import React, { Component, useState, useEffect } from 'react';
import { Modal, ModalTitle, ModalContent, InputField, ModalActions, Button, Layer, layers, CenteredContent, CircularLoader, HeaderBar } from '@dhis2/ui';
import { useDataQuery, Provider } from '@dhis2/app-runtime';
import PropTypes from 'prop-types';
import i18n from '@dhis2/d2-i18n';
import moment from 'moment';

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

const bgColor = '#F4F6F8',
      iconColor = '#B0BEC5',
      primaryTextColor = '#000000',
      secondaryTextColor = '#494949',
      errorColor = 'red';
const _defaultExport = [".mask.jsx-1324283519{position:absolute;top:0px;left:0px;right:0px;bottom:0px;overflow:auto;overflow-y:auto;color:".concat(primaryTextColor, ";background-color:").concat(bgColor, ";display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;min-width:640px;min-height:480px;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}"), ".container.jsx-1324283519{text-align:center;color:black;}", ".icon.jsx-1324283519{width:96px;height:96px;color:".concat(iconColor, ";margin-bottom:24px;}"), ".message.jsx-1324283519{font-size:24px;margin-bottom:24px;}", ".link.jsx-1324283519{font-size:18px;-webkit-text-decoration:underline;text-decoration:underline;cursor:pointer;margin-bottom:24px;}", ".drawerToggle.jsx-1324283519{font-size:12px;color:".concat(secondaryTextColor, ";-webkit-text-decoration:underline;text-decoration:underline;cursor:pointer;margin-bottom:12px;}"), ".drawerVisible.jsx-1324283519{padding:8px;display:block;height:150px;width:500px;overflow:auto;overflow-y:auto;border:1px solid ".concat(secondaryTextColor, ";text-align:left;}"), ".drawerHidden.jsx-1324283519{display:none;}", ".errorIntro.jsx-1324283519{font-size:12px;line-height:1.2;color:".concat(secondaryTextColor, ";margin-bottom:8px;font-family:Menlo,Courier,monospace !important;}"), ".errorDetails.jsx-1324283519{font-size:12px;line-height:1.2;color:".concat(errorColor, ";font-family:Menlo,Courier,monospace !important;}")];
_defaultExport.__hash = "1324283519";

const translatedErrorHeading = i18n.t('An error occurred in the DHIS2 application.');

const replaceNewlinesWithBreaks = text => text.split('\n').reduce((out, line, i) => [...out, line, /*#__PURE__*/React.createElement("br", {
  key: i
})], []);

class FatalErrorBoundary extends Component {
  constructor(props) {
    super(props);

    _defineProperty(this, "toggleTechInfoDrawer", () => {
      this.setState({
        drawerOpen: !this.state.drawerOpen
      });
    });

    this.state = {
      error: null,
      errorInfo: null,
      drawerOpen: false
    };
  }

  componentDidCatch(error, errorInfo) {
    this.setState({
      error,
      errorInfo
    });
  }

  render() {
    const {
      children
    } = this.props;

    if (this.state.error) {
      return /*#__PURE__*/React.createElement("div", {
        className: "jsx-".concat(_defaultExport.__hash) + " " + "mask"
      }, /*#__PURE__*/React.createElement(_JSXStyle, {
        id: _defaultExport.__hash
      }, _defaultExport), /*#__PURE__*/React.createElement("div", {
        className: "jsx-".concat(_defaultExport.__hash) + " " + "container"
      }, /*#__PURE__*/React.createElement("div", {
        className: "jsx-".concat(_defaultExport.__hash) + " " + "message"
      }, i18n.t('Something went wrong')), /*#__PURE__*/React.createElement("div", {
        onClick: () => window.location.reload(),
        className: "jsx-".concat(_defaultExport.__hash) + " " + "link"
      }, i18n.t('Refresh to try again')), /*#__PURE__*/React.createElement("div", {
        onClick: this.toggleTechInfoDrawer,
        className: "jsx-".concat(_defaultExport.__hash) + " " + "drawerToggle"
      }, this.state.drawerOpen ? i18n.t('Hide technical details') : i18n.t('Show technical details')), /*#__PURE__*/React.createElement("div", {
        className: "jsx-".concat(_defaultExport.__hash) + " " + ((this.state.drawerOpen ? 'drawerVisible' : 'drawerHidden') || "")
      }, /*#__PURE__*/React.createElement("div", {
        className: "jsx-".concat(_defaultExport.__hash) + " " + "errorIntro"
      }, translatedErrorHeading, /*#__PURE__*/React.createElement("br", {
        className: "jsx-".concat(_defaultExport.__hash)
      }), i18n.t('The following information may be requested by technical support.')), /*#__PURE__*/React.createElement("div", {
        className: "jsx-".concat(_defaultExport.__hash) + " " + "errorDetails"
      }, [replaceNewlinesWithBreaks(this.state.error.stack + '\n---' + this.state.errorInfo.componentStack)]))));
    }

    return children;
  }

}
FatalErrorBoundary.propTypes = {
  children: PropTypes.node.isRequired
};

var Server = "";
var Username = "";
var Password = "";
var enTranslations = {
	"Please sign in": "",
	Server: Server,
	Username: Username,
	Password: Password,
	"Sign in": "",
	"An error occurred in the DHIS2 application.": "",
	"Something went wrong": "",
	"Refresh to try again": "",
	"Hide technical details": "",
	"Show technical details": "",
	"The following information may be requested by technical support.": ""
};

var Server$1 = "Servidor";
var Username$1 = "Nombre de usuario";
var Password$1 = "Contraseña";
var esTranslations = {
	"Please sign in": "Por favor iniciar sesión",
	Server: Server$1,
	Username: Username$1,
	Password: Password$1,
	"Sign in": "Iniciar sesión",
	"An error occurred in the DHIS2 application.": "",
	"Something went wrong": "",
	"Refresh to try again": "",
	"Hide technical details": "",
	"Show technical details": "",
	"The following information may be requested by technical support.": ""
};

var Server$2 = "Serveur";
var Username$2 = "Nom d'utilizateur";
var Password$2 = "Mot de passe";
var frTranslations = {
	"Please sign in": "Se connecter, s'il vous plait",
	Server: Server$2,
	Username: Username$2,
	Password: Password$2,
	"Sign in": "Connexion",
	"An error occurred in the DHIS2 application.": "",
	"Something went wrong": "",
	"Refresh to try again": "",
	"Hide technical details": "",
	"Show technical details": "",
	"The following information may be requested by technical support.": ""
};

//------------------------------------------------------------------------------
const namespace = 'default';
i18n.addResources('en', namespace, enTranslations);
i18n.addResources('es', namespace, esTranslations);
i18n.addResources('fr', namespace, frTranslations);

const staticUrl = process.env.REACT_APP_DHIS2_BASE_URL;
const LoginModal = () => {
  const [server, setServer] = useState(staticUrl || window.localStorage.DHIS2_BASE_URL || '');
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [isDirty, setIsDirty] = useState(false);

  const isValid = val => val && val.length >= 2;

  const onSubmit = async e => {
    e.preventDefault();
    setIsDirty(true);

    if (isValid(server) && isValid(username) && isValid(password)) {
      window.localStorage.DHIS2_BASE_URL = server;

      try {
        await fetch("".concat(server, "/dhis-web-commons-security/login.action"), {
          method: 'POST',
          credentials: 'include',
          body: "j_username=".concat(username, "&j_password=").concat(password),
          headers: {
            'X-Requested-With': 'XMLHttpRequest',
            Accept: 'application/json',
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        });
      } catch (e) {
        console.log('TODO: This will always error and cancel the request until we get a real login endpoint!');
      } // TODO: Hacky solution... this shouldn't require a reload


      window.location.reload();
    }
  };

  return /*#__PURE__*/React.createElement(Modal, {
    open: true,
    small: true,
    dataTest: "dhis2-adapter-loginmodal"
  }, /*#__PURE__*/React.createElement("form", {
    onSubmit: onSubmit
  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Please sign in')), /*#__PURE__*/React.createElement(ModalContent, null, !staticUrl && /*#__PURE__*/React.createElement(InputField, {
    dataTest: "dhis2-adapter-loginserver",
    error: isDirty && !isValid(server),
    label: i18n.t('Server'),
    name: "server",
    type: "text",
    value: server,
    onChange: input => setServer(input.value)
  }), /*#__PURE__*/React.createElement(InputField, {
    dataTest: "dhis2-adapter-loginname",
    error: isDirty && !isValid(username),
    label: i18n.t('Username'),
    name: "j_username",
    type: "text",
    value: username,
    onChange: input => setUsername(input.value)
  }), /*#__PURE__*/React.createElement(InputField, {
    dataTest: "dhis2-adapter-loginpassword",
    error: isDirty && !isValid(password),
    label: i18n.t('Password'),
    name: "j_password",
    type: "password",
    value: password,
    onChange: input => setPassword(input.value)
  })), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(Button, {
    primary: true,
    dataTest: "dhis2-adapter-loginsubmit",
    type: "submit"
  }, i18n.t('Sign in')))));
};

i18n.setDefaultNamespace('default');

const simplifyLocale = locale => {
  const idx = locale.indexOf('-');

  if (idx === -1) {
    return locale;
  }

  return locale.substr(0, idx);
};

const setGlobalLocale = locale => {
  if (locale !== 'en' && locale !== 'en-us') {
    import("moment/locale/".concat(locale)).catch(() => {
      /* ignore */
    });
  }

  moment.locale(locale);
  const simplifiedLocale = simplifyLocale(locale);
  i18n.changeLanguage(simplifiedLocale);
};

const useLocale = locale => {
  useEffect(() => {
    setGlobalLocale(locale || window.navigator.language);
  }, [locale]);
};

const settingsQuery = {
  userSettings: {
    resource: 'userSettings'
  }
};
const AuthBoundary = ({
  url,
  children
}) => {
  const {
    loading,
    error,
    data
  } = useDataQuery(settingsQuery);
  useLocale(data && data.userSettings.keyUiLocale);

  if (loading) {
    return /*#__PURE__*/React.createElement(Layer, {
      translucent: true,
      level: layers.alert
    }, /*#__PURE__*/React.createElement(CenteredContent, null, /*#__PURE__*/React.createElement(CircularLoader, null)));
  }

  if (error) {
    return /*#__PURE__*/React.createElement(LoginModal, {
      url: url
    });
  }

  return children;
};

const styles = ["div.app-shell-adapter.jsx-1964929281{width:100vw;height:100vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}", "div.app-shell-app.jsx-1964929281{-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;overflow:auto;height:100%;}"];
styles.__hash = "1964929281";

const App = ({
  url,
  apiVersion,
  appName,
  children
}) => /*#__PURE__*/React.createElement(FatalErrorBoundary, null, /*#__PURE__*/React.createElement(Provider, {
  config: {
    baseUrl: url,
    apiVersion: apiVersion
  }
}, /*#__PURE__*/React.createElement("div", {
  className: "jsx-".concat(styles.__hash) + " " + "app-shell-adapter"
}, /*#__PURE__*/React.createElement(_JSXStyle, {
  id: styles.__hash
}, styles), /*#__PURE__*/React.createElement(HeaderBar, {
  appName: appName
}), /*#__PURE__*/React.createElement(AuthBoundary, {
  url: url
}, /*#__PURE__*/React.createElement("div", {
  className: "jsx-".concat(styles.__hash) + " " + "app-shell-app"
}, children)))));

export default App;
//# sourceMappingURL=lib.js.map
