{"version":3,"file":"lib.js","sources":["../../src/shared/helpers/createBlurHandler.js","../../src/shared/helpers/createChangeHandler.js","../../src/shared/helpers/createFocusHandler.js","../../src/shared/helpers/createSelectChangeHandler.js","../../src/shared/helpers/createToggleChangeHandler.js","../../src/shared/helpers/hasError.js","../../src/shared/helpers/getValidationText.js","../../src/shared/helpers/isLoading.js","../../src/shared/helpers/isValid.js","../../src/shared/propTypes.js","../../src/CheckboxFieldFF/CheckboxFieldFF.js","../../src/FileInputFieldFF/FileInputFieldFF.js","../../src/InputFieldFF/InputFieldFF.js","../../src/MultiSelectFieldFF/MultiSelectFieldFF.js","../../src/SingleSelectFieldFF/SingleSelectFieldFF.js","../../src/RadioFieldFF/RadioFieldFF.js","../../src/SwitchFieldFF/SwitchFieldFF.js","../../src/TextAreaFieldFF/TextAreaFieldFF.js","../../src/FieldGroupFF/FieldGroupFF.js","../../src/transformers/arrayWithIdObjects.js","../../src/validators/helpers/index.js","../../src/validators/alphaNumeric.js","../../src/validators/boolean.js","../../src/validators/composeValidators.js","../../src/validators/createCharacterLengthRange.js","../../src/validators/createEqualTo.js","../../src/validators/createMaxCharacterLength.js","../../src/validators/createNumberRange.js","../../src/validators/createMaxNumber.js","../../src/validators/createMinCharacterLength.js","../../src/validators/createMinNumber.js","../../src/validators/createPattern.js","../../src/validators/dhis2Password.js","../../src/validators/dhis2Username.js","../../src/validators/email.js","../../src/validators/hasValue.js","../../src/validators/integer.js","../../src/validators/internationalPhoneNumber.js","../../src/validators/number.js","../../src/validators/string.js","../../src/validators/url.js"],"sourcesContent":["const createBlurHandler = (input, onBlur) => (payload, event) => {\n    input.onBlur(event)\n\n    if (onBlur && typeof onBlur === 'function') {\n        onBlur(payload, event)\n    }\n}\n\nexport { createBlurHandler }\n","const PRIMITIVE_TYPES = new Set(['string', 'number', 'boolean'])\n\nconst createChangeHandler = ({ onChange }) => payload => {\n    if (payload && 'value' in payload) {\n        // ui-core event signature\n        onChange(payload.value)\n    } else if (payload && payload.target && 'value' in payload.target) {\n        // synthetic event\n        onChange(payload.target.value)\n    } else if (PRIMITIVE_TYPES.has(typeof payload)) {\n        // directly usable value\n        onChange(payload)\n    } else {\n        // ¯\\_(ツ)_/¯\n        throw new Error('Could not process event payload')\n    }\n}\n\nexport { createChangeHandler }\n","const createFocusHandler = (input, onFocus) => (payload, event) => {\n    input.onFocus(event)\n\n    if (onFocus && typeof onFocus === 'function') {\n        onFocus(payload, event)\n    }\n}\n\nexport { createFocusHandler }\n","const createSelectChangeHandler = ({ onChange }) => ({ selected }) => {\n    onChange(selected)\n}\nexport { createSelectChangeHandler }\n","const createToggleChangeHandler = (input, onChange) => (payload, event) => {\n    input.onChange(event)\n\n    if (onChange && typeof onChange === 'function') {\n        onChange(payload, event)\n    }\n}\n\nexport { createToggleChangeHandler }\n","const hasError = (meta, error) => error || (meta.touched && meta.invalid)\n\nexport { hasError }\n","import { hasError } from './hasError.js'\n\nconst getValidationText = (meta, validationText, error) => {\n    if (validationText) {\n        return validationText\n    }\n\n    if (hasError(meta, error)) {\n        if (meta.error) {\n            return meta.error\n        }\n\n        if (meta.submitError) {\n            return meta.submitError\n        }\n    }\n\n    return ''\n}\n\nexport { getValidationText }\n","const isLoading = (meta, loading, showLoadingStatus) =>\n    loading || (showLoadingStatus && meta.validating)\n\nexport { isLoading }\n","const isValid = (meta, valid, showValidStatus) =>\n    valid || (showValidStatus && meta.touched && meta.valid)\n\nexport { isValid }\n","import propTypes from '@dhis2/prop-types'\n\nconst toggleGroupOptionsProp = propTypes.arrayOf(\n    propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n    })\n)\n\nconst inputPropType = propTypes.shape({\n    name: propTypes.string.isRequired,\n    onChange: propTypes.func.isRequired,\n    value: propTypes.any,\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n})\n\nconst metaPropType = propTypes.shape({\n    error: propTypes.string,\n    invalid: propTypes.bool,\n    touched: propTypes.bool,\n    valid: propTypes.bool,\n    validating: propTypes.bool,\n})\n\nexport { toggleGroupOptionsProp, inputPropType, metaPropType }\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { CheckboxField } from '@dhis2/ui-widgets'\n\nimport {\n    createToggleChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isValid,\n    getValidationText,\n} from '../shared/helpers.js'\n\nimport { metaPropType, inputPropType } from '../shared/propTypes.js'\n\nexport const CheckboxFieldFF = ({\n    error,\n    input,\n    meta,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    ...rest\n}) => (\n    <CheckboxField\n        {...rest}\n        name={input.name}\n        checked={input.checked}\n        value={input.value}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createToggleChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n    />\n)\n\nCheckboxFieldFF.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport { FileListItem } from '@dhis2/ui-core'\nimport { FileInputField } from '@dhis2/ui-widgets'\n\nimport { hasError, isValid, getValidationText } from '../shared/helpers.js'\nimport { inputPropType, metaPropType } from '../shared/propTypes.js'\n\nconst btnLabel = i18n.t('Upload file')\nconst btnLabelMulti = i18n.t('Upload files')\n\nconst dedupeAndConcat = (currentFiles, newFileList) => {\n    return [...currentFiles, ...newFileList].reduceRight(\n        (acc, file) => {\n            if (!acc.unique.has(file.name)) {\n                acc.unique.add(file.name)\n                acc.files.unshift(file)\n            }\n            return acc\n        },\n        { files: [], unique: new Set() }\n    ).files\n}\n\nconst createChangeHandler = (input, multifile) => ({ files }) => {\n    // A JavaScript FileList instance is read-only, so we cannot add files to it\n    // FileList also doesn't have a .map method so by destructuring the FileList\n    // instance into an array we can add, remove and map\n    const currentFiles = Array.isArray(input.value) ? input.value : []\n    const value = multifile ? dedupeAndConcat(currentFiles, files) : [...files]\n\n    input.onChange(value)\n}\n\nconst createRemoveHandler = (input, fileToDelete) => () => {\n    const files = input.value.filter(file => file !== fileToDelete)\n    const value = files.length > 0 ? files : ''\n\n    input.onChange(value)\n}\n\nexport const FileInputFieldFF = ({\n    buttonLabel,\n    disabled,\n    error,\n    input,\n    meta,\n    multifile,\n    showValidStatus,\n    valid,\n    validationText,\n    ...rest\n}) => {\n    const files = input.value || []\n\n    return (\n        <FileInputField\n            {...rest}\n            onChange={createChangeHandler(input, multifile)}\n            buttonLabel={buttonLabel || multifile ? btnLabelMulti : btnLabel}\n            disabled={disabled || (!multifile && files.length >= 1)}\n            multiple={multifile}\n            name={input.name}\n            error={hasError(meta, error)}\n            valid={isValid(meta, valid, showValidStatus)}\n            validationText={getValidationText(meta, validationText, error)}\n        >\n            {files.map(file => (\n                <FileListItem\n                    key={file.name}\n                    label={file.name}\n                    onRemove={createRemoveHandler(input, file)}\n                    removeText={i18n.t('Remove')}\n                />\n            ))}\n        </FileInputField>\n    )\n}\n\nFileInputFieldFF.defaultProps = {\n    placeholder: i18n.t('No file(s) selected yet'),\n}\n\nFileInputFieldFF.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    buttonLabel: propTypes.string,\n    disabled: propTypes.bool,\n    error: propTypes.bool,\n    multifile: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n    value: propTypes.oneOfType([\n        propTypes.arrayOf(propTypes.instanceOf(File)),\n        propTypes.oneOf(['']),\n    ]),\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { InputField } from '@dhis2/ui-widgets'\n\nimport {\n    createChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from '../shared/helpers.js'\nimport { metaPropType, inputPropType } from '../shared/propTypes.js'\n\nexport const InputFieldFF = ({\n    input,\n    meta,\n    error,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    loading,\n    showLoadingStatus,\n    ...rest\n}) => (\n    <InputField\n        {...rest}\n        name={input.name}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        loading={isLoading(meta, loading, showLoadingStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n        value={input.value}\n    />\n)\n\nInputFieldFF.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { MultiSelectField } from '@dhis2/ui-widgets'\nimport { MultiSelectOption } from '@dhis2/ui-core'\n\nimport {\n    createSelectChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from '../shared/helpers.js'\n\nimport { inputPropType, metaPropType } from '../shared/propTypes.js'\n\nexport const MultiSelectFieldFF = ({\n    error,\n    input,\n    loading,\n    meta,\n    onBlur,\n    onFocus,\n    options,\n    showLoadingStatus,\n    showValidStatus,\n    valid,\n    validationText,\n    ...rest\n}) => {\n    return (\n        <MultiSelectField\n            {...rest}\n            name={input.name}\n            error={hasError(meta, error)}\n            valid={isValid(meta, valid, showValidStatus)}\n            loading={isLoading(meta, loading, showLoadingStatus)}\n            validationText={getValidationText(meta, validationText, error)}\n            onFocus={createFocusHandler(input, onFocus)}\n            onChange={createSelectChangeHandler(input)}\n            onBlur={createBlurHandler(input, onBlur)}\n            selected={\n                input.value || []\n            } /* input.value is an empty string initially, so we're providing an empty array if falsey */\n        >\n            {options.map(option => (\n                <MultiSelectOption key={option.value} {...option} />\n            ))}\n        </MultiSelectField>\n    )\n}\n\nMultiSelectFieldFF.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    options: propTypes.arrayOf(\n        propTypes.shape({\n            label: propTypes.string,\n            value: propTypes.string,\n        })\n    ),\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { SingleSelectField } from '@dhis2/ui-widgets'\nimport { SingleSelectOption } from '@dhis2/ui-core'\n\nimport {\n    createSelectChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from '../shared/helpers.js'\nimport { inputPropType, metaPropType } from '../shared/propTypes.js'\n\nexport const SingleSelectFieldFF = ({\n    error,\n    input,\n    loading,\n    meta,\n    onBlur,\n    onFocus,\n    options,\n    showLoadingStatus,\n    showValidStatus,\n    valid,\n    validationText,\n    ...rest\n}) => {\n    return (\n        <SingleSelectField\n            {...rest}\n            name={input.name}\n            error={hasError(meta, error)}\n            valid={isValid(meta, valid, showValidStatus)}\n            loading={isLoading(meta, loading, showLoadingStatus)}\n            validationText={getValidationText(meta, validationText, error)}\n            onFocus={createFocusHandler(input, onFocus)}\n            onChange={createSelectChangeHandler(input)}\n            onBlur={createBlurHandler(input, onBlur)}\n            selected={input.value || ''}\n        >\n            {options.map(option => (\n                <SingleSelectOption key={option.value} {...option} />\n            ))}\n        </SingleSelectField>\n    )\n}\n\nSingleSelectFieldFF.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n    options: propTypes.arrayOf(\n        propTypes.shape({\n            label: propTypes.string,\n            value: propTypes.string,\n        })\n    ).isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { Radio } from '@dhis2/ui-core'\n\nimport {\n    createToggleChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isValid,\n    getValidationText,\n} from '../shared/helpers.js'\n\nimport { metaPropType, inputPropType } from '../shared/propTypes.js'\n\nexport const RadioFieldFF = ({\n    error,\n    input,\n    meta,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    ...rest\n}) => (\n    <Radio\n        {...rest}\n        name={input.name}\n        checked={input.checked}\n        value={input.value}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createToggleChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n    />\n)\n\nRadioFieldFF.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { SwitchField } from '@dhis2/ui-widgets'\n\nimport {\n    createToggleChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isValid,\n    getValidationText,\n} from '../shared/helpers.js'\nimport { metaPropType, inputPropType } from '../shared/propTypes.js'\n\nexport const SwitchFieldFF = ({\n    error,\n    input,\n    meta,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    ...rest\n}) => (\n    <SwitchField\n        {...rest}\n        checked={input.checked}\n        name={input.name}\n        value={input.value}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createToggleChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n    />\n)\n\nSwitchFieldFF.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\nimport propTypes from '@dhis2/prop-types'\nimport { TextAreaField } from '@dhis2/ui-widgets'\n\nimport {\n    createChangeHandler,\n    createFocusHandler,\n    createBlurHandler,\n    hasError,\n    isLoading,\n    isValid,\n    getValidationText,\n} from '../shared/helpers.js'\nimport { metaPropType, inputPropType } from '../shared/propTypes.js'\n\nexport const TextAreaFieldFF = ({\n    input,\n    meta,\n    error,\n    showValidStatus,\n    valid,\n    validationText,\n    onBlur,\n    onFocus,\n    loading,\n    showLoadingStatus,\n    ...rest\n}) => (\n    <TextAreaField\n        {...rest}\n        name={input.name}\n        error={hasError(meta, error)}\n        valid={isValid(meta, valid, showValidStatus)}\n        loading={isLoading(meta, loading, showLoadingStatus)}\n        validationText={getValidationText(meta, validationText, error)}\n        onFocus={createFocusHandler(input, onFocus)}\n        onChange={createChangeHandler(input)}\n        onBlur={createBlurHandler(input, onBlur)}\n        value={input.value}\n    />\n)\n\nTextAreaFieldFF.propTypes = {\n    input: inputPropType.isRequired,\n    meta: metaPropType.isRequired,\n\n    error: propTypes.bool,\n    loading: propTypes.bool,\n    showLoadingStatus: propTypes.bool,\n    showValidStatus: propTypes.bool,\n    valid: propTypes.bool,\n    validationText: propTypes.string,\n\n    onBlur: propTypes.func,\n    onFocus: propTypes.func,\n}\n","import React from 'react'\nimport { useField } from 'react-final-form'\n\nimport { FieldGroup } from '@dhis2/ui-widgets'\nimport propTypes from '@dhis2/prop-types'\n\nexport const FieldGroupFF = ({ name, label, children, required }) => {\n    const {\n        meta: { error, touched },\n    } = useField(name, { subscription: { error: true, touched: true } })\n\n    const isError = !!error && !!touched\n    let errorText\n\n    if (isError) {\n        if (typeof error === 'string') {\n            errorText = error\n        } else if (typeof error === 'object' && error[name]) {\n            errorText = error[name]\n        } else {\n            errorText = null\n        }\n    }\n\n    return (\n        <FieldGroup\n            label={label}\n            required={required}\n            error={isError}\n            name={name}\n            validationText={errorText}\n        >\n            {children}\n        </FieldGroup>\n    )\n}\n\nFieldGroupFF.propTypes = {\n    children: propTypes.node,\n    label: propTypes.string,\n    name: propTypes.string,\n    required: propTypes.bool,\n}\n","const format = value => (!value ? [] : value.map(({ id }) => id))\n\nconst parse = value =>\n    !value || (Array.isArray(value) && value.length === 0)\n        ? undefined\n        : value.map(id => ({ id }))\n\nexport const arrayWithIdObjects = { format, parse }\n","export const isEmpty = value =>\n    typeof value === 'undefined' || value === null || value === ''\n\nexport const isString = value => typeof value === 'string'\n\nexport const isInteger = value => Number.isSafeInteger(value)\n\nexport const isNumber = value => typeof value === 'number'\n\nexport const isNumeric = value =>\n    (isString(value) || isNumber(value)) && !isNaN(value)\n\nexport const isInRange = (lowerBound, upperBound, value) =>\n    value >= lowerBound && value <= upperBound\n\nexport const toNumber = value => Number(value)\n\nexport const requiredArgumentErrorMessage =\n    'Incorrect arguments provided when creating validator'\n\nexport const requireArgument = (value, type) => {\n    if (isEmpty(value) || typeof value !== type) {\n        throw new Error(requiredArgumentErrorMessage)\n    }\n}\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst ALPHA_NUMERIC_PATTERN = /^[a-z0-9 ]*$/i\n\nconst invalidAlphaNumericMessage = i18n.t(\n    'Please provide an alpha-numeric value'\n)\n\nconst alphaNumeric = value =>\n    isEmpty(value) || (isString(value) && ALPHA_NUMERIC_PATTERN.test(value))\n        ? undefined\n        : invalidAlphaNumericMessage\n\nexport { alphaNumeric, invalidAlphaNumericMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty } from './helpers/index.js'\n\nconst invalidBooleanMessage = i18n.t('Please provide a boolean value')\n\nconst boolean = value =>\n    isEmpty(value) || typeof value === 'boolean'\n        ? undefined\n        : invalidBooleanMessage\n\nexport { boolean, invalidBooleanMessage }\n","export const composeValidators = (...validators) => {\n    return (...args) => {\n        return validators.reduce(\n            (error, validator) => error || validator(...args),\n            undefined\n        )\n    }\n}\n","import i18n from '@dhis2/d2-i18n'\nimport {\n    isEmpty,\n    isString,\n    isInRange,\n    requireArgument,\n} from './helpers/index.js'\n\nconst createCharacterLengthRange = (lowerBound, upperBound, customMessage) => {\n    requireArgument(lowerBound, 'number')\n    requireArgument(upperBound, 'number')\n\n    const errorMessage =\n        customMessage ||\n        i18n.t(\n            'Please enter between {{lowerBound}} and {{upperBound}} characters',\n            { lowerBound, upperBound }\n        )\n\n    return value =>\n        isEmpty(value) ||\n        (isString(value) && isInRange(lowerBound, upperBound, value.length))\n            ? undefined\n            : errorMessage\n}\n\nexport { createCharacterLengthRange }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, requireArgument } from './helpers/index.js'\n\nconst createEqualTo = (key, description) => {\n    requireArgument(key, 'string')\n\n    const errorMessage = i18n.t(\n        'Please make sure the value of this input matches the value in \"{{otherField}}\".',\n        { otherField: description || key }\n    )\n\n    return (value, allValues) =>\n        isEmpty(value) || value === allValues[key] ? undefined : errorMessage\n}\n\nexport { createEqualTo }\n","import i18n from '@dhis2/d2-i18n'\nimport { createCharacterLengthRange } from './createCharacterLengthRange.js'\n\nconst createMaxCharacterLength = upperBound =>\n    createCharacterLengthRange(\n        0,\n        upperBound,\n        i18n.t('Please enter a maximum of {{upperBound}} characters', {\n            upperBound,\n        })\n    )\n\nexport { createMaxCharacterLength }\n","import i18n from '@dhis2/d2-i18n'\nimport {\n    isEmpty,\n    isNumeric,\n    toNumber,\n    isInRange,\n    requireArgument,\n} from './helpers/index.js'\n\nconst createNumberRange = (lowerBound, upperBound, customMessage) => {\n    requireArgument(lowerBound, 'number')\n    requireArgument(upperBound, 'number')\n\n    const errorMessage =\n        customMessage ||\n        i18n.t(\n            'Number cannot be less than {{lowerBound}} or more than {{upperBound}}',\n            { lowerBound, upperBound }\n        )\n\n    return value =>\n        isEmpty(value) ||\n        (isNumeric(value) && isInRange(lowerBound, upperBound, toNumber(value)))\n            ? undefined\n            : errorMessage\n}\n\nexport { createNumberRange }\n","import i18n from '@dhis2/d2-i18n'\nimport { createNumberRange } from './createNumberRange.js'\n\nconst createMaxNumber = upperBound =>\n    createNumberRange(\n        -Infinity,\n        upperBound,\n        i18n.t('Please enter a number with a maximum of {{upperBound}}', {\n            upperBound,\n        })\n    )\n\nexport { createMaxNumber }\n","import i18n from '@dhis2/d2-i18n'\nimport { createCharacterLengthRange } from './createCharacterLengthRange.js'\n\nconst createMinCharacterLength = lowerBound =>\n    createCharacterLengthRange(\n        lowerBound,\n        Infinity,\n        i18n.t('Please enter at least {{lowerBound}} characters', {\n            lowerBound,\n        })\n    )\n\nexport { createMinCharacterLength }\n","import i18n from '@dhis2/d2-i18n'\nimport { createNumberRange } from './createNumberRange.js'\n\nconst createMinNumber = lowerBound =>\n    createNumberRange(\n        lowerBound,\n        Infinity,\n        i18n.t('Please enter a number of at least {{lowerBound}}', {\n            lowerBound,\n        })\n    )\n\nexport { createMinNumber }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst invalidPatternMessage =\n    'The first argument passed to createPattern was not a valid regex'\n\nconst createPattern = (pattern, message) => {\n    if (!(pattern instanceof RegExp)) {\n        throw new Error(invalidPatternMessage)\n    }\n\n    return value =>\n        isEmpty(value) || (isString(value) && pattern.test(value))\n            ? undefined\n            : message ||\n              i18n.t(\n                  'Please make sure the value of this input matches the pattern {{patternString}}.',\n                  { patternString: pattern.toString() }\n              )\n}\n\nexport { createPattern, invalidPatternMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst LOWER_CASE_PATTERN = /^(?=.*[a-z]).+$/\nconst UPPER_CASE_PATTERN = /^(?=.*[A-Z]).+$/\nconst DIGIT_PATTERN = /^(?=.*[0-9]).+$/\n// Using this regex to match all non-alphanumeric characters to match server-side implementation\n// https://github.com/dhis2/dhis2-core/blob/master/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/SpecialCharacterValidationRule.java#L39\nconst SPECIAL_CHARACTER_PATTERN = /[^a-zA-Z0-9]/\n\nconst notString = i18n.t('Password should be a string')\nconst tooShort = i18n.t('Password should be at least 8 characters long')\nconst tooLong = i18n.t('Password should be no longer than 34 characters')\nconst noLowerCase = i18n.t(\n    'Password should contain at least one lowercase letter'\n)\nconst noUpperCase = i18n.t(\n    'Password should contain at least one UPPERCASE letter'\n)\nconst noNumber = i18n.t('Password should contain at least one number')\nconst noSpecialCharacter = i18n.t(\n    'Password should have at least one special character'\n)\n\n/**\n * Tests if a given password is compliant with the password restrictions.\n * This function checks all restrictions below, but returns when the first violation was found:\n * - At least 8 characters\n * - No more than 34 characters\n * - Contains at least 1 lowercase character\n * - Contains at least 1 UPPERCASE character\n * - Contains at least 1 number\n * - Contains at least 1 special character\n */\nconst dhis2Password = value => {\n    if (isEmpty(value)) {\n        return undefined\n    }\n\n    if (!isString(value)) {\n        return notString\n    }\n\n    if (value.length < 8) {\n        return tooShort\n    }\n\n    if (value.length > 35) {\n        return tooLong\n    }\n\n    if (!LOWER_CASE_PATTERN.test(value)) {\n        return noLowerCase\n    }\n\n    if (!UPPER_CASE_PATTERN.test(value)) {\n        return noUpperCase\n    }\n\n    if (!DIGIT_PATTERN.test(value)) {\n        return noNumber\n    }\n\n    if (!SPECIAL_CHARACTER_PATTERN.test(value)) {\n        return noSpecialCharacter\n    }\n\n    return undefined\n}\n\nconst errorMessages = {\n    notString,\n    tooShort,\n    tooLong,\n    noLowerCase,\n    noUpperCase,\n    noNumber,\n    noSpecialCharacter,\n}\n\nexport { dhis2Password, errorMessages }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst invalidUsernameMessage = i18n.t(\n    'Please provide a username between 1 and 255 characters'\n)\n\nconst dhis2Username = value =>\n    isEmpty(value) ||\n    (isString(value) && value.length >= 1 && value.length <= 255)\n        ? undefined\n        : invalidUsernameMessage\n\nexport { dhis2Username, invalidUsernameMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\n/*\n * Email validation is complicated business. There is no perfect regex,\n * instead we have to make a trade-off between complexity, correctness,\n * and the risk of producing false negatives. This article\n * https://www.regular-expressions.info/email.html offers a good overview.\n * It recommends to use a very simple regex when having to validate many\n * records, but for validating an individual email address a more complex\n * regex may be used.\n *\n * The pattern below is taken from the \"The Official Standard: RFC 5322\"\n * section of the article and is described as:\n * \"[..] a more practical implementation of RFC 5322 [..] that will still\n * match 99.99% of all email addresses in actual use today\"\n *\n * const EMAIL_ADDRESS_PATTERN = /[a-z0-9!#$%&'*+/=?^_‘{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_‘{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/i\n *\n * However, this regex produces a few false negatives and quite a lot\n * of false positives.\n *\n * Another regex, found in this stackoverflow answer below resulted in a better\n * overall picture in terms of false negatives and positives, so I settled on that one:\n * https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript/46181#46181\n */\n\nconst EMAIL_ADDRESS_PATTERN = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i\n\nconst invalidEmailMessage = i18n.t('Please provide a valid email address')\n\nconst email = value =>\n    isEmpty(value) || (isString(value) && EMAIL_ADDRESS_PATTERN.test(value))\n        ? undefined\n        : invalidEmailMessage\n\nexport { email, invalidEmailMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty } from './helpers/index.js'\n\nconst hasValueMessage = i18n.t('Please provide a value')\n\nconst hasValue = value => (isEmpty(value) ? hasValueMessage : undefined)\n\nexport { hasValue, hasValueMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isInteger, isNumeric, toNumber } from './helpers/index.js'\n\nconst invalidIntegerMessage = i18n.t(\n    'Please provide a round number without decimals'\n)\n\nconst integer = value =>\n    isEmpty(value) || (isNumeric(value) && isInteger(toNumber(value)))\n        ? undefined\n        : invalidIntegerMessage\n\nexport { integer, invalidIntegerMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString, isNumeric } from './helpers/index.js'\n\n/*\n * There were some problems with the server side implementation\n * of how international phone numbers are validated, and the\n * server side implementation will likely be removed, see:\n * https://jira.dhis2.org/browse/DHIS2-8040\n *\n * So, rather than aligning with the server-side implementation\n * this validator implements the E.164 numbering plan, see:\n * https://www.cm.com/blog/how-to-format-international-telephone-numbers/\n *\n * SPECS\n * Here's how the E.164 numbering plan works:\n * - A telephone number can have a maximum of 15 digits\n * - The first part of the telephone number is the country code (one to three digits)\n * - The second part is the national destination code (NDC)\n * - The last part is the subscriber number (SN)\n * - The NDC and SN together are collectively called the national (significant) number\n *\n * IMPLEMENTATION ADVICE\n * Two important things to note: First of all, in the international E.164 notation a\n * leading ‘0’ is removed. The UK mobile phone number ‘07911 123456’ in international\n * format is ‘+44 7911 123456’, so without the first zero. Secondly in the E.164 notation\n * all spaces, dashes [‘-‘] and parentheses [ ‘(‘ and ‘)’] are removed, besides the\n * leading ‘+’ all characters should be numeric.\n */\n\nconst invalidInternationalPhoneNumberMessage = i18n.t(\n    'Please provide a valid international phone number.'\n)\n\nconst internationalPhoneNumber = value => {\n    // allow empty values\n    if (isEmpty(value)) {\n        return undefined\n    }\n\n    // value must be a string\n    if (!isString(value)) {\n        return invalidInternationalPhoneNumberMessage\n    }\n\n    const cleanedValue = value\n        // strip all hyphens, dots, spaces\n        .replace(/[-. )(]/g, '')\n        // trim leading zeroes and plus signs\n        .replace(/^[0+]+/, '')\n\n    return isNumeric(cleanedValue) && cleanedValue.length <= 15\n        ? undefined\n        : invalidInternationalPhoneNumberMessage\n}\n\nexport { internationalPhoneNumber, invalidInternationalPhoneNumberMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isNumeric } from './helpers/index.js'\n\nconst invalidNumberMessage = i18n.t('Please provide a number')\n\nconst number = value =>\n    isEmpty(value) || isNumeric(value) ? undefined : invalidNumberMessage\n\nexport { number, invalidNumberMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\nconst invalidStringMessage = i18n.t('Please provide a string')\n\nconst string = value =>\n    isEmpty(value) || isString(value) ? undefined : invalidStringMessage\n\nexport { string, invalidStringMessage }\n","import i18n from '@dhis2/d2-i18n'\nimport { isEmpty, isString } from './helpers/index.js'\n\n// Source: https://gist.github.com/dperini/729294\nconst URL_PATTERN = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i\n\nconst invalidUrlMessage = i18n.t('Please provide a valid url')\n\nconst url = value =>\n    isEmpty(value) || (isString(value) && URL_PATTERN.test(value))\n        ? undefined\n        : invalidUrlMessage\n\nexport { url, invalidUrlMessage }\n"],"names":["createBlurHandler","input","onBlur","payload","event","PRIMITIVE_TYPES","Set","createChangeHandler","onChange","value","target","has","Error","createFocusHandler","onFocus","createSelectChangeHandler","selected","createToggleChangeHandler","hasError","meta","error","touched","invalid","getValidationText","validationText","submitError","isLoading","loading","showLoadingStatus","validating","isValid","valid","showValidStatus","toggleGroupOptionsProp","propTypes","arrayOf","shape","label","string","isRequired","inputPropType","name","func","any","metaPropType","bool","CheckboxFieldFF","rest","CheckboxField","checked","btnLabel","i18n","t","btnLabelMulti","dedupeAndConcat","currentFiles","newFileList","reduceRight","acc","file","unique","add","files","unshift","multifile","Array","isArray","createRemoveHandler","fileToDelete","filter","length","FileInputFieldFF","buttonLabel","disabled","FileInputField","map","FileListItem","defaultProps","placeholder","oneOfType","instanceOf","File","oneOf","InputFieldFF","InputField","MultiSelectFieldFF","options","MultiSelectField","option","MultiSelectOption","SingleSelectFieldFF","SingleSelectField","SingleSelectOption","RadioFieldFF","Radio","SwitchFieldFF","SwitchField","TextAreaFieldFF","TextAreaField","FieldGroupFF","children","required","useField","subscription","isError","errorText","FieldGroup","node","format","id","parse","undefined","arrayWithIdObjects","isEmpty","isString","isInteger","Number","isSafeInteger","isNumber","isNumeric","isNaN","isInRange","lowerBound","upperBound","toNumber","requiredArgumentErrorMessage","requireArgument","type","ALPHA_NUMERIC_PATTERN","invalidAlphaNumericMessage","alphaNumeric","test","invalidBooleanMessage","boolean","composeValidators","validators","args","reduce","validator","createCharacterLengthRange","customMessage","errorMessage","createEqualTo","key","description","otherField","allValues","createMaxCharacterLength","createNumberRange","createMaxNumber","Infinity","createMinCharacterLength","createMinNumber","invalidPatternMessage","createPattern","pattern","message","RegExp","patternString","toString","LOWER_CASE_PATTERN","UPPER_CASE_PATTERN","DIGIT_PATTERN","SPECIAL_CHARACTER_PATTERN","notString","tooShort","tooLong","noLowerCase","noUpperCase","noNumber","noSpecialCharacter","dhis2Password","invalidUsernameMessage","dhis2Username","EMAIL_ADDRESS_PATTERN","invalidEmailMessage","email","hasValueMessage","hasValue","invalidIntegerMessage","integer","invalidInternationalPhoneNumberMessage","internationalPhoneNumber","cleanedValue","replace","invalidNumberMessage","number","invalidStringMessage","URL_PATTERN","invalidUrlMessage","url"],"mappings":"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"}